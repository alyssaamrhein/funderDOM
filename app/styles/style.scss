@import url(http://fonts.googleapis.com/css?family=Raleway:600);

$raleway: 'Raleway', sans-serif;
$basic-gray:#E0E0E0;



h1 {
  display: block;
  font-family: $raleway;
  text-align: center;
}

h2 {
  background-color: darken($basic-gray, 10%);
  font-family: $raleway;
  margin: 0;
  padding: .5em;
}

.accordian {
  height: auto;
  width: 80%;
  margin: 0 auto;
}

@media screen and (max-width: 40em) { //Yay responsive!
  .accordian {
    height: auto;
    width: 99%;
    margin: 0 auto;
  }
}

.content, //common convention is to put comma separated selectors on new lines to more easily distinquish that its two different elements
.content-2 {
  background-color: lighten($basic-gray, 50%);
  height: 0;
  opacity: 0;
}


p {
  margin: 0;
  padding: 1em 4em;
}

.active {
  background-color: $basic-gray;
  height: 4em;
  opacity: 1;
  -webkit-transition: height 1s, background-color 2s, opacity 1s;
          transition: height 1s, background-color 2s, opacity 1s;
}
/*
  --- These two classes are almost identical. With this much duplication you would be much better off
      moving that into its own class and only having the changes in these two classes.
      Keep in mind there are multiple ways of doing that. I'll demonstrate both.
      
      //Base class style
      .list-item {
        background-color: $basic-gray;
        -webkit-transition: height 1s, background-color 2s, opacity 1s;
                transition: height 1s, background-color 2s, opacity 1s;
        
        .active {
          height: 4em;
          opacity: 1; 
        }
        
        .inactive {
          height: 0;
          opacity: 0;
        }
      }
      
      //Overwrite style
      
      .active {
          background-color: $basic-gray;
          height: 4em;
          opacity: 1;
          -webkit-transition: height 1s, background-color 2s, opacity 1s;
                  transition: height 1s, background-color 2s, opacity 1s;
                  
          .inactive {
            height: 0;
            opacity: 0;
          }
      }
      
      
      Either way, having an active and inactive class can be confusing. 
      Normally this is done by havbing a base class that acts as an inactive state and an active state to change it.

      
*/
.inActive {
  background-color: $basic-gray;
  height: 0;
  opacity: 0;
  -webkit-transition: height 1s, background-color 2s, opacity 1s;
          transition: height 1s, background-color 2s, opacity 1s;
}
